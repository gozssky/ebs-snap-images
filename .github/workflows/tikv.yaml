name: tikv
on:
  push:
    branches:
      - main

concurrency:
  group: ${{ github.ref }}-${{ github.workflow }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          repository: tikv/tikv
          ref: master
      - name: Set docker sha
        run: |
          echo "DOCKER_SHA=$(git rev-parse --short HEAD)" >> $GITHUB_ENV
      - name: Setup Dockerfile
        run: |
          sed -i 's/.git//g' .dockerignore
          cat > Dockerfile <<EOF
          FROM rust:1.57 as builder
          WORKDIR /tikv
          COPY . .
          RUN apt update && apt install cmake -y
          RUN make release

          FROM debian:11
          RUN apt update && apt install ca-certificates -y && apt clean
          RUN ln -sf /bin/bash /bin/sh
          COPY --from=builder /tikv/target/release/tikv-server /tikv-server
          COPY --from=builder /tikv/target/release/tikv-ctl /tikv-ctl
          EXPOSE 20160 20180
          ENTRYPOINT ["/tikv-server"]
          EOF
      - name: Docker meta
        id: docker_meta
        uses: docker/metadata-action@v3
        with:
          images: gozssky/tikv
          tags: |
            type=raw,value=v{{date 'YYYYMMDD'}}-${{ env.DOCKER_SHA }}
            type=raw,value=latest
      # The v2 version of docker/build-push-action uses Docker Buildx to build.
      - name: Docker Setup Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          push: true
          context: .
          file: Dockerfile
          tags: ${{ steps.docker_meta.outputs.tags }}
          labels: ${{ steps.docker_meta.outputs.labels }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Image digest
        run:
          echo ${{ steps.docker_build.outputs.digest }}
